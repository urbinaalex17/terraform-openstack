#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log  127.0.0.1    local2
    #log  loghost      local0 info

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4096
    user        haproxy
    group       haproxy

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# SSL frontend which proxys to the backends
#---------------------------------------------------------------------
#frontend  https-in *:443
#    mode tcp
#    use_backend iap-https

    # acl url_static       path_beg       -i /static /images /javascript /stylesheets
    # acl url_static       path_end       -i .jpg .gif .png .css .js

    # use_backend static          if url_static
    # default_backend             app


#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
#backend iap-https
#    balance     roundrobin
#    mode tcp

    # maximum SSL session ID length is 32 bytes.
#    stick-table type binary len 32 size 30k expire 30m

#    server  iapdev01 172.16.4.13:8443 check
    #server  app2 127.0.0.1:5002 check
    #server  app3 127.0.0.1:5003 check
    #server  app4 127.0.0.1:5004 check

#---------------------------------------------------------------------
# HTTP redirecto to SSL port
#---------------------------------------------------------------------
# frontend http-in *:80
#    redirect scheme https code 301

#---------------------------------------------------------------------
# HTTP frontend service
#---------------------------------------------------------------------
frontend http-in *:80
     mode http
     use_backend iap-http

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend iap-http
    balance     roundrobin
    mode http

    server iapdev01-http 172.16.4.12:8080 check
    server iapdev02-http 172.16.4.13:8080 check
